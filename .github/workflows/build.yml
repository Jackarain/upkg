name: build

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    # Skip building pull requests from the same repository
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != '${{ github.repository }}'
    runs-on: windows-2022
    strategy:
      matrix:
        os: [windows-2022]
    env:
      BUILD_TYPE: Release
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v5

    - name: Cache Static Qt Install
      id: cache-qt6
      if: startsWith(runner.os, 'Windows')
      uses: actions/cache@v4
      with:
        path: qt6-binary
        key: ${{ runner.os }}-qt6-win64-vc2022-static

    - name: Install Static Qt
      if: startsWith(runner.os, 'Windows') && (steps.cache-qt6.outputs.cache-hit != 'true')
      run: |
        Invoke-WebRequest https://github.com/microcai/static-build-qt6/releases/download/qt6_680_msvc2022_x64/qt6_680_win64_vc2022_static.zip -OutFile .\qt6-binary.zip
        expand-archive -path "qt6-binary.zip"

    - name: setup env for cmake to pickup QT
      id: qt6-install
      if: startsWith(runner.os, 'Windows')
      shell: bash
      run: |
        echo "QT_ROOT_DIR=${{ github.workspace }}/qt6-binary/qt6-win64-vc2022-static" >> $GITHUB_ENV
        echo "QT_PLUGIN_PATH=${{ github.workspace }}/qt6-binary/qt6-win64-vc2022-static/plugins" >> $GITHUB_ENV
        echo "qt_root_dir=${{ github.workspace }}/qt6-binary/qt6-win64-vc2022-static" >> $GITHUB_OUTPUT
        echo "qt_plugin_dir=${{ github.workspace }}/qt6-binary/qt6-win64-vc2022-static/plugins" >> $GITHUB_OUTPUT
        echo "CMAKE_PREFIX_PATH=${{ github.workspace }}/qt6-binary/qt6-win64-vc2022-static" >> $GITHUB_ENV

    - name: Enable Developer Command Prompt
      uses: ilammy/msvc-dev-cmd@v1.13.0

    - name: Build
      run: |
        cmake -G Ninja -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} "-DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install" -B build
        cmake --build build

    - name: Upload generic artifacts
      uses: actions/upload-artifact@v4.4.0
      with:
        name: upkg
        path: build/bin/release

    - name: zip the result
      run: |
        cd build/bin/release
        7z a upkg.zip upkg.exe

    - name: upload Release
      uses: softprops/action-gh-release@master
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: build/bin/release/upkg.zip
